Analysis


Create Table  

CREATE TABLE `vproject77.Cyclistic.annual_data_2024`
(
  rideable_type STRING,
  member_casual STRING,
  ride_duration TIME,
  started_date DATE,
  started_time TIME,
  started_day STRING,
  started_month STRING,
  ended_date DATE,
  ended_time TIME,
  ended_day STRING,    
  ended_month STRING   
);


Insert Tables(12)  

INSERT INTO `vproject77.Cyclistic.annual_data_2024`
SELECT * FROM `vproject77.Cyclistic.202309`
UNION ALL
SELECT * FROM `vproject77.Cyclistic.202310`
UNION ALL
SELECT * FROM `vproject77.Cyclistic.202311`
UNION ALL
SELECT * FROM `vproject77.Cyclistic.202312`
UNION ALL
SELECT * FROM `vproject77.Cyclistic.202401`
UNION ALL
SELECT * FROM `vproject77.Cyclistic.202402`
UNION ALL
SELECT * FROM `vproject77.Cyclistic.202403`
UNION ALL
SELECT * FROM `vproject77.Cyclistic.202404`
UNION ALL
SELECT * FROM `vproject77.Cyclistic.202405`
UNION ALL
SELECT * FROM `vproject77.Cyclistic.202406`
UNION ALL
SELECT * FROM `vproject77.Cyclistic.202407`
UNION ALL
SELECT * FROM `vproject77.Cyclistic.202408`;


Percentage Casual/Annual  

select 
  member_casual as member_type,
  count(*) as total_rides,
  round ( count(*) * 100 / (select count(*) from `vproject77.Cyclistic.annual_data_2024`), 2) as riders_percentage

from `vproject77.Cyclistic.annual_data_2024`

group by member_casual

Month Total Rides  

SELECT 
  started_month as Month,
  member_casual as member_type,
  count(*) as Month_Rides

FROM
  `vproject77.Cyclistic.annual_data_2024`

GROUP BY 
  member_casual,
  started_month

ORDER BY 
  CASE 
    WHEN started_month = 'January' THEN 1
    WHEN started_month = 'February' THEN 2
    WHEN started_month = 'March' THEN 3
    WHEN started_month = 'April' THEN 4
    WHEN started_month = 'May' THEN 5
    WHEN started_month = 'June' THEN 6
    WHEN started_month = 'July' THEN 7
    WHEN started_month = 'August' THEN 8
    WHEN started_month = 'September' THEN 9
    WHEN started_month = 'October' THEN 10
    WHEN started_month = 'November' THEN 11
    WHEN started_month = 'December' THEN 12
  END,
  member_casual;


Day Total Rides  

SELECT 
  started_day as Weekday,
  member_casual as member_type,
  count(*) as Day_Rides

FROM
  `vproject77.Cyclistic.annual_data_2024`

GROUP BY 
  member_casual,
  started_day

ORDER BY 
  CASE 
    WHEN started_day = 'Monday' THEN 1
    WHEN started_day = 'Tuesday' THEN 2
    WHEN started_day = 'Wednesday' THEN 3
    WHEN started_day = 'Thursday' THEN 4
    WHEN started_day = 'Friday' THEN 5
    WHEN started_day = 'Saturday' THEN 6
    WHEN started_day = 'Sunday' THEN 7
  END,
  member_casual;

Average Duration (sec)

SELECT 
  member_casual as member_type,
  ROUND(AVG(EXTRACT(HOUR from ride_duration) * 60 + 
      EXTRACT(MINUTE from ride_duration) + 
      EXTRACT(SECOND from ride_duration)), 2) AS avg_duration_sec,
  started_day AS Weekday
FROM 
  `vproject77.Cyclistic.annual_data_2024`
GROUP BY 
  member_casual, 
  started_day
ORDER BY
  CASE 
    WHEN started_day = 'Monday' THEN 1
    WHEN started_day = 'Tuesday' THEN 2
    WHEN started_day = 'Wednesday' THEN 3
    WHEN started_day = 'Thursday' THEN 4
    WHEN started_day = 'Friday' THEN 5
    WHEN started_day = 'Saturday' THEN 6
    WHEN started_day = 'Sunday' THEN 7
  END;


Ratio of bike type between casual riders / annual members

select 
  rideable_type as bike_type,
  member_casual as member_type,
  count(*) as total_rides,
  round ( count(*) * 100 / (select count(*) from `vproject77.Cyclistic.annual_data_2024`), 2) as riders_percentage

from `vproject77.Cyclistic.annual_data_2024`

group by member_casual, rideable_type
